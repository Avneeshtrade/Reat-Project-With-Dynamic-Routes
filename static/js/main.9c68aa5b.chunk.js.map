{"version":3,"sources":["containers/Sidebar/sidebar.module.css","containers/Header/header.module.css","containers/Layout/layout.module.css","utils/helpers/global.js","containers/routes.js","containers/Sidebar/Sidebar.js","containers/Header/Header.js","containers/Content/Content.js","containers/Layout/Layout.js","App.js","reportWebVitals.js","redux/actionTypes/agents.js","redux/actionTypes/bots.js","redux/actionTypes/socket.js","redux/actionTypes/login.js","redux/actionTypes/user.js","redux/actionTypes/process.js","redux/reducers/agents.js","redux/reducers/process.js","redux/reducers/bots.js","redux/reducers/socket.js","redux/reducers/login.js","redux/reducers/user.js","utils/service/emitter.js","constants/event.constant.js","utils/service/socket.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","getWindowDimension","window","width","innerWidth","height","innerHeight","Dashboard","React","lazy","Login","Home","routes","Admin","key","path","content","icon","DashboardOutlined","title","exact","component","KeyOutlined","Sidebar","props","history","useHistory","collapsed","onCollapse","Sider","Layout","SubMenu","Menu","handleItemChange","link","state","push","pathname","pushToLink","collapsible","className","styles","sidebar","collapsedWidth","style","theme","mode","length","map","item","children","i","Item","onClick","AppHeader","menu","location","href","header","color","display","justifyContent","direction","wrap","overlay","placement","fontSize","PoweroffOutlined","type","AppContent","routeList","Fragment","route","index","name","render","to","AppLayout","Header","Content","useState","setCollapsed","undefined","windowWidth","setWindowWidth","dimensions","setDimensions","useEffect","handleDimensionChange","addEventListener","removeEventListener","useDimensions","useCallback","padding","toggle","minHeight","paddingTop","paddingLeft","loading","App","Suspense","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","agentActionTypes","AGENT_START_FETCH","AGENT_SET_ERROR","AGENT_REMOVE_ERROR","FETCH_AGENTS_REQUEST","FETCH_AGENTS_SUCCESS","FETCH_AGENTS_FAILURE","REMOVE_FETCH_AGENTS","UPDATE_AGENT_STATUS","UPDATE_AGENT_STATUS_ARRAY","UPDATE_AGENT_IS_BUSY_STATUS","botActionTypes","BOT_START_FETCH","BOT_SET_ERROR","BOT_REMOVE_ERROR","FETCH_BOTS_REQUEST","FETCH_BOTS_SUCCESS","FETCH_BOTS_FAILURE","REMOVE_BOTS","REMOVE_BOTS_POPUP","CREATE_BOT_REQUEST","CREATE_BOT_SUCCESS","CREATE_BOT_FAILURE","FETCH_BOT_DETAILS_REQUEST","FETCH_BOT_DETAILS_SUCCESS","FETCH_BOT_DETAILS_FAILURE","REMOVE_BOT_DETAILS","REMOVE_BOT_DETAILS_POPUP","DELETE_BOT_REQUEST","DELETE_BOT_SUCCESS","DELETE_BOT_FAILURE","UPDATE_BOT_REQUEST","UPDATE_BOT_SUCCESS","UPDATE_BOT_FAILURE","socketActionTypes","INITIATE_SOCKET_SUCCESS","INITIATE_SOCKET_FAILURE","loginActionTypes","LOGIN_START_FETCH","LOGIN_SET_ERROR","LOGIN_REMOVE_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REMOVE_POPUP","LOGOUT","userActionTypes","USER_START_FETCH","USER_SET_ERROR","USER_REMOVE_ERROR","USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAILURE","REMOVE_USER_REGISTRATION_POPUP","GET_USER_ROLE","SET_USER_ROLE","REMOVE_USER_ROLE","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","REMOVE_USERS","FETCH_USERS_BY_PAGGINATION","REMOVE_USERS_BY_PAGGINATION","FETCH_USER_DETAILS_SUCCESS","FETCH_USER_DETAILS_FAILURE","REMOVE_USER_DETAILS","REMOVE_USER_DETAILS_POPUP","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","processActionTypes","PROCESS_START_FETCH","PROCESS_SET_ERROR","PROCESS_REMOVE_ERROR","FETCH_ALL_PROCESS_REQUEST","FETCH_ALL_PROCESS_SUCCESS","FETCH_ALL_PROCESS_FAILURE","REMOVE_ALL_PROCESS","UPDATE_ALL_PROCESS","UPDATE_PROCESS_STATUS","REMOVE_PROCESS_BY_ID","REMOVE_PROCESS_POPUP","FETCH_PROCESS_LOGS_REQUEST","FETCH_PROCESS_LOGS_SUCCESS","FETCH_PROCESS_LOGS_FAILURE","REMOVE_PROCESS_LOGS","CREATE_PROCESS_REQUEST","CREATE_PROCESS_SUCCESS","CREATE_PROCESS_FAILURE","SCHEDULE_PROCESS_SUCCESS","SCHEDULE_PROCESS_FAILURE","REMOVE_SCHEDULE_PROCESS_POPUP","FETCH_SCHEDULED_PROCESS_SUCCESS","FETCH_SCHEDULED_PROCESS_FAILURE","REMOVE_SCHEDULED_PROCESS","DELETE_SCHEDULED_PROCESS_SUCCESS","DELETE_SCHEDULED_PROCESS_FAILURE","FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS","FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE","REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP","REMOVE_SCHEDULED_PROCESS_DETAILS","initialState","agents","data","message","error","AgentReducer","action","ACTION","payload","rows","agent","id","status","updatedAt","User","forEach","isBusy","processes","processLogs","scheduleProcesses","scheduleDetails","ProcessReducer","updateProcessId","log","processExecutionLogs","filter","process","bots","duration","JSON","parse","botDetails","BotReducer","isDeleted","socketObject","SocketReducer","success","localStorage","getItem","LoginReducer","registration","usersByPagging","users","userDetails","userRole","UserReducer","eventEmitter","EventEmitter","Emitter","on","event","fn","once","off","emit","Object","freeze","socket","this","clientIo","connect","SOCKET_CONSTANTS","reconnect","forceNew","autoConnect","transports","addListeners","console","connected","token","roomId","userId","disconnect","appReducer","combineReducers","login","user","rootReducer","clear","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9c68aa5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__33x1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2I39H\",\"toggleButton\":\"header_toggleButton__1UwEs\",\"company_logo\":\"header_company_logo__1fQFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"layout_header__3TSir\"};","import { useEffect, useState } from \"react\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  CloseCircleOutlined,\r\n  SyncOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Tag, notification } from \"antd\";\r\nimport { userRoles } from \"../../constants/app.constants\";\r\n\r\nexport const pushToLink = (history, link, state = {}) => {\r\n  history.push({ pathname: link, state });\r\n};\r\n\r\nexport const getWindowDimension = () => {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return { width, height };\r\n};\r\n\r\nexport const useDimensions = () => {\r\n  const [dimensions, setDimensions] = useState(getWindowDimension());\r\n\r\n  useEffect(() => {\r\n    const handleDimensionChange = () => setDimensions(getWindowDimension());\r\n\r\n    window.addEventListener(\"resize\", handleDimensionChange);\r\n    return () => window.removeEventListener(\"resize\", handleDimensionChange);\r\n  });\r\n  return dimensions;\r\n};\r\n\r\nexport const getStatus = (status) => {\r\n  switch (status) {\r\n    case 0:\r\n      return (\r\n        <Tag icon={<ClockCircleOutlined />} color=\"warning\">\r\n          Pending\r\n        </Tag>\r\n      );\r\n    case 1:\r\n      return (\r\n        <Tag icon={<SyncOutlined spin />} color=\"processing\">\r\n          Running\r\n        </Tag>\r\n      );\r\n    case 2:\r\n      return (\r\n        <Tag icon={<CheckCircleOutlined />} color=\"success\">\r\n          Executed\r\n        </Tag>\r\n      );\r\n    case 3:\r\n      return (\r\n        <Tag icon={<CloseCircleOutlined />} color=\"error\">\r\n          Error\r\n        </Tag>\r\n      );\r\n  }\r\n};\r\n\r\nexport const openNotification = (message = \"\", description = \"\") => {\r\n  notification.open({\r\n    message,\r\n    description,\r\n    type: \"info\",\r\n    style: { width: \"300px\", fontSize: \"12px\" },\r\n  });\r\n};\r\n\r\nexport const isAdmin = () => {\r\n  return getUserRole() === \"Admin\";\r\n};\r\n\r\nexport const getUserRole = () => {\r\n  if (localStorage.getItem(\"user\")) {\r\n    return userRoles[JSON.parse(localStorage.getItem(\"user\")).roleId];\r\n  }\r\n};\r\n\r\nexport const resObject = (type, operation, message, data) => {\r\n  return {\r\n    content: {\r\n      type,\r\n      operation,\r\n      message,\r\n      data,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {DashboardOutlined,HistoryOutlined,KeyOutlined} from \"@ant-design/icons\";\r\n\r\nconst Dashboard = React.lazy(() => import(\"../components/Dashboard\"));\r\nconst Login = React.lazy(() => import(\"../components/Login\"));\r\nconst Home = React.lazy(() => import(\"../components/Home\"));\r\n\r\n\r\nconst Tab2 = (props) =>{\r\n  return <h1>tab2 Page Here</h1>\r\n}\r\n//Defining User Role Based Routes\r\nconst routes = {\r\n  Admin: [\r\n    {\r\n      key: 1,\r\n      path: \"/controlroom/dashboard\",\r\n      content: \"Dashboard\",\r\n      icon: <DashboardOutlined />,\r\n      title:\"dashboard\",\r\n      exact: true,\r\n      component: Dashboard,\r\n    },\r\n    {\r\n      key: 2,\r\n      path: \"/controlroom/login\",\r\n      content: \"Login\",\r\n      title:\"tab1\",\r\n      icon: <KeyOutlined />,\r\n      exact: true,\r\n      component: Login,\r\n    },\r\n    {\r\n      key: 3,\r\n      path: \"/controlroom/home\",\r\n      content: \"Home\",\r\n      title:\"Home\",\r\n      icon: <KeyOutlined />,\r\n      exact: true,\r\n      component: Home,\r\n    }\r\n  ]\r\n};\r\n\r\nexport default routes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\n// import menuList from \"./menuList\";\r\nimport styles from \"./sidebar.module.css\";\r\nimport { pushToLink } from \"../../utils/helpers/global\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\n// import { getUserRole } from \"../../utils/helpers/global\";\r\n\r\nconst Sidebar = (props) => {\r\n  const history = useHistory();\r\n  const { collapsed, onCollapse } = props;\r\n  const { Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const content = routes.Admin;\r\n  const handleItemChange = (link) => {\r\n    pushToLink(history, link);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      collapsible={true}\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      className={styles.sidebar}\r\n      collapsedWidth={0}\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Menu\r\n        theme={\"dark\"}\r\n        mode=\"inline\"\r\n      >\r\n        {content && content.length &&  content.map((item) => {\r\n            return item.children && !!item.children.length ? (\r\n              <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                {item.children.map((i) => (\r\n                  <Menu.Item\r\n                    key={i.key}\r\n                    icon={i.icon}\r\n                    onClick={() => handleItemChange(i.path)}\r\n                  >\r\n                    {i.content}\r\n                  </Menu.Item>\r\n                ))}\r\n              </SubMenu>\r\n            ) : (\r\n              <Menu.Item\r\n                key={item.key}\r\n                icon={item.icon}\r\n                onClick={() => handleItemChange(item.path)}\r\n              >\r\n                {item.content}\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport styles from \"./header.module.css\";\r\nimport { PoweroffOutlined } from \"@ant-design/icons\";\r\nimport { Button, Menu, Dropdown, Space } from \"antd\";\r\n\r\n\r\nconst AppHeader = (props) => {\r\n \r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item\r\n        onClick={() => {\r\n          window.location.href = \"/\";\r\n        }}\r\n      >\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <h1 style={{ color: \"white\" }}>My Demo Project</h1>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        <Space direction=\"vertical\" wrap>\r\n          <Dropdown overlay={menu} placement=\"bottomCenter\">\r\n            <Button\r\n              style={{ color: \"white\", fontSize: \"20px\" }}\r\n              icon={<PoweroffOutlined />}\r\n              type=\"link\"\r\n            />\r\n          </Dropdown>\r\n        </Space>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\n// import { getUserRole } from \"../../utils/helpers/global\";\r\n\r\nconst AppContent = () => {\r\n  const routeList = routes.Admin;\r\n  return (\r\n        <React.Fragment>\r\n          <Switch>\r\n            {\r\n            routeList.map((route, index) => <Route\r\n                    key={route.key}\r\n                    path={route.path}\r\n                    name={route.name}\r\n                    render={(props) => <route.component {...props} />}\r\n                    exact={route.exact}\r\n                  />\r\n                  )}\r\n            <Route>\r\n              <Redirect to=\"/pagenotfound\" />\r\n            </Route>\r\n          </Switch>\r\n        </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppContent;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport AppHeader from \"../Header/Header\";\r\nimport styles from \"./layout.module.css\";\r\nimport { useDimensions } from \"../../utils/helpers/global\";\r\nimport AppContent from \"../Content/Content\";\r\n\r\nconst AppLayout = (props) => {\r\n  const { Header, Content } = Layout;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(undefined);\r\n  const { width } = useDimensions();\r\n  useEffect(() => {\r\n    if (width < 1040) {\r\n      setCollapsed(true);\r\n      setWindowWidth(width);\r\n    } else {\r\n      setWindowWidth(width);\r\n      setCollapsed(false);\r\n    }\r\n  }, [width]);\r\n\r\n  const onCollapse = useCallback(\r\n    (collapsed) => {\r\n      setCollapsed(collapsed);\r\n    },\r\n    [width, collapsed]\r\n  );\r\n\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return (\r\n    <Layout>\r\n      <Header className={styles.header} style={{ padding: 0 }}>\r\n        <AppHeader\r\n          collapsed={collapsed}\r\n          onCollapse={onCollapse}\r\n          toggle={toggle}\r\n        />\r\n      </Header>\r\n      <Layout className=\"site-layout\">\r\n        <Sidebar collapsed={collapsed} onCollapse={onCollapse} {...props} />\r\n        <Content\r\n          style={{\r\n            minHeight: \"100vh\",\r\n            paddingTop: \"64px\",\r\n            paddingLeft: collapsed\r\n              ? windowWidth > 900\r\n                ? \"7%\"\r\n                : \"10%\"\r\n              : windowWidth > 900\r\n              ? \"15%\"\r\n              : \"23%\",\r\n          }}\r\n        >\r\n          <AppContent {...props} />\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport AppLayout from \"./containers/Layout\";\r\n\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n);\r\n\r\n//Importing Components\r\nconst Login = React.lazy(() => import(\"./components/Login\"));\r\nconst Home = React.lazy(() => import(\"./components/Home\"));\r\nconst PageNotFound = React.lazy(() =>\r\n  import(\"./components/PageNotFound/PageNotFound\")\r\n);\r\n\r\nfunction App() {\r\n  const [isLogin,setIsLogin] = useState(true)\r\n  return (\r\n    <BrowserRouter>\r\n      <React.Suspense fallback={loading}>\r\n            <Route\r\n            path=\"/controlroom\"\r\n            name=\"controlroom\"\r\n            render={props=><AppLayout {...props} />}\r\n          />\r\n          <Route>\r\n          <Redirect to='/controlroom/dashboard'/>\r\n        </Route>\r\n      </React.Suspense>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const agentActionTypes = {\r\n  AGENT_START_FETCH: \"AGENT_START_FETCH\",\r\n  AGENT_SET_ERROR: \"AGENT_SET_ERROR\",\r\n  AGENT_REMOVE_ERROR: \"AGENT_REMOVE_ERROR\",\r\n  FETCH_AGENTS_REQUEST: \"FETCH_AGENTS_REQUEST\",\r\n  FETCH_AGENTS_SUCCESS: \"FETCH_AGENTS_SUCCESS\",\r\n  FETCH_AGENTS_FAILURE: \"FETCH_AGENTS_FAILURE\",\r\n  REMOVE_FETCH_AGENTS: \"REMOVE_FETCH_AGENTS\",\r\n  UPDATE_AGENT_STATUS: \"UPDATE_AGENT_STATUS\",\r\n  UPDATE_AGENT_STATUS_ARRAY: \"UPDATE_AGENT_STATUS_ARRAY\",\r\n  UPDATE_AGENT_IS_BUSY_STATUS: \"UPDATE_AGENT_IS_BUSY_STATUS\",\r\n};\r\n\r\nexport default agentActionTypes;\r\n","const botActionTypes = {\r\n  BOT_START_FETCH: \"BOT_START_FETCH\",\r\n  BOT_SET_ERROR: \"BOT_SET_ERROR\",\r\n  BOT_REMOVE_ERROR: \"BOT_REMOVE_ERROR\",\r\n  FETCH_BOTS_REQUEST: \"FETCH_BOTS_REQUEST\",\r\n  FETCH_BOTS_SUCCESS: \"FETCH_BOTS_SUCCESS\",\r\n  FETCH_BOTS_FAILURE: \"FETCH_BOTS_FAILURE\",\r\n  REMOVE_BOTS: \"REMOVE_BOTS\",\r\n  REMOVE_BOTS_POPUP: \"REMOVE_BOTS_POPUP\",\r\n  CREATE_BOT_REQUEST: \"CREATE_BOT_REQUEST\",\r\n  CREATE_BOT_SUCCESS: \"CREATE_BOT_SUCCESS\",\r\n  CREATE_BOT_FAILURE: \"CREATE_BOT_FAILURE\",\r\n  FETCH_BOT_DETAILS_REQUEST: \"FETCH_BOT_DETAILS_REQUEST\",\r\n  FETCH_BOT_DETAILS_SUCCESS: \"FETCH_BOT_DETAILS_SUCCESS\",\r\n  FETCH_BOT_DETAILS_FAILURE: \"FETCH_BOT_DETAILS_FAILURE\",\r\n  REMOVE_BOT_DETAILS: \"REMOVE_BOT_DETAILS\",\r\n  REMOVE_BOT_DETAILS_POPUP: \"REMOVE_BOT_DETAILS_POPUP\",\r\n  DELETE_BOT_REQUEST: \"DELETE_BOT_REQUEST\",\r\n  DELETE_BOT_SUCCESS: \"DELETE_BOT_SUCCESS\",\r\n  DELETE_BOT_FAILURE: \"DELETE_BOT_FAILURE\",\r\n  UPDATE_BOT_REQUEST: \"UPDATE_BOT_REQUEST\",\r\n  UPDATE_BOT_SUCCESS: \"UPDATE_BOT_SUCCESS\",\r\n  UPDATE_BOT_FAILURE: \"UPDATE_BOT_FAILURE\",\r\n};\r\n\r\nexport default botActionTypes;\r\n","const socketActionTypes = {\r\n    INITIATE_SOCKET_SUCCESS: 'INITIATE_SOCKET_SUCCESS',\r\n    INITIATE_SOCKET_FAILURE: 'INITIATE_SOCKET_FAILURE'\r\n}\r\n\r\nexport default socketActionTypes;","const loginActionTypes = {\r\n  LOGIN_START_FETCH:\"LOGIN_START_FETCH\",\r\n  LOGIN_SET_ERROR:\"LOGIN_SET_ERROR\",\r\n  LOGIN_REMOVE_ERROR:\"LOGIN_REMOVE_ERROR\",\r\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n  REMOVE_POPUP: \"REMOVE_POPUP\",\r\n  LOGOUT: \"LOGOUT\",\r\n};\r\n\r\nexport default loginActionTypes;\r\n","const userActionTypes = {\r\n  USER_START_FETCH:\"USER_START_FETCH\",\r\n  USER_SET_ERROR:\"USER_SET_ERROR\",\r\n  USER_REMOVE_ERROR:\"USER_REMOVE_ERROR\",\r\n  USER_REGISTRATION_REQUEST: \"USER_REGISTRATION_REQUEST\",\r\n  USER_REGISTRATION_SUCCESS: \"USER_REGISTRATION_SUCCESS\",\r\n  USER_REGISTRATION_FAILURE: \"USER_REGISTRATION_FAILURE\",\r\n  REMOVE_USER_REGISTRATION_POPUP: \"REMOVE_USER_REGISTRATION_POPUP\",\r\n  GET_USER_ROLE: \"GET_USER_ROLE\",\r\n  SET_USER_ROLE: \"GET_USER_ROLE\",\r\n  REMOVE_USER_ROLE: \"REMOVE_USER_ROLE\",\r\n  FETCH_USERS_REQUEST: \"FETCH_USERS_REQUEST\",\r\n  FETCH_USERS_SUCCESS: \"FETCH_USERS_SUCCESS\",\r\n  FETCH_USERS_FAILURE: \"FETCH_USERS_FAILURE\",\r\n  REMOVE_USERS: \"REMOVE_USERS\",\r\n  FETCH_USERS_BY_PAGGINATION: \"FETCH_USERS_BY_PAGGINATION\",\r\n  REMOVE_USERS_BY_PAGGINATION: \"REMOVE_USERS_BY_PAGGINATION\",\r\n  FETCH_USER_DETAILS_SUCCESS: \"FETCH_USER_DETAILS_SUCCESS\",\r\n  FETCH_USER_DETAILS_FAILURE: \"FETCH_USER_DETAILS_FAILURE\",\r\n  REMOVE_USER_DETAILS: \"REMOVE_USER_DETAILS\",\r\n  REMOVE_USER_DETAILS_POPUP: \"REMOVE_USER_DETAILS_POPUP\",\r\n  DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\",\r\n  DELETE_USER_FAILURE: \"DELETE_USER_FAILURE\",\r\n  UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\",\r\n  UPDATE_USER_FAILURE: \"UPDATE_USER_FAILURE\",\r\n};\r\n\r\nexport default userActionTypes;\r\n","const processActionTypes = {\r\n  PROCESS_START_FETCH:\"PROCESS_START_FETCH\",\r\n  PROCESS_SET_ERROR:\"PROCESS_SET_ERROR\",\r\n  PROCESS_REMOVE_ERROR:\"PROCESS_REMOVE_ERROR\",\r\n  FETCH_ALL_PROCESS_REQUEST: \"FETCH_ALL_PROCESS_REQUEST\",\r\n  FETCH_ALL_PROCESS_SUCCESS: \"FETCH_ALL_PROCESS_SUCCESS\",\r\n  FETCH_ALL_PROCESS_FAILURE: \"FETCH_ALL_PROCESS_FAILURE\",\r\n  REMOVE_ALL_PROCESS: \"REMOVE_ALL_PROCESS\",\r\n  UPDATE_ALL_PROCESS: \"UPDATE_ALL_PROCESS\",\r\n  UPDATE_PROCESS_STATUS: \"UPDATE_PROCESS_STATUS\",\r\n  REMOVE_PROCESS_BY_ID: \"REMOVE_PROCESS_BY_ID\",\r\n  REMOVE_PROCESS_POPUP: \"REMOVE_PROCESS_POPUP\",\r\n  FETCH_PROCESS_LOGS_REQUEST: \"FETCH_PROCESS_LOGS_REQUEST\",\r\n  FETCH_PROCESS_LOGS_SUCCESS: \"FETCH_PROCESS_LOGS_SUCCESS\",\r\n  FETCH_PROCESS_LOGS_FAILURE: \"FETCH_PROCESS_LOGS_FAILURE\",\r\n  REMOVE_PROCESS_LOGS: \"REMOVE_PROCESS_LOGS\",\r\n  CREATE_PROCESS_REQUEST: \"CREATE_PROCESS_REQUEST\",\r\n  CREATE_PROCESS_SUCCESS: \"CREATE_PROCESS_SUCCESS\",\r\n  CREATE_PROCESS_FAILURE: \"CREATE_PROCESS_FAILURE\",\r\n  SCHEDULE_PROCESS_SUCCESS: \"SCHEDULE_PROCESS_SUCCESS\",\r\n  SCHEDULE_PROCESS_FAILURE: \"SCHEDULE_PROCESS_FAILURE\",\r\n  REMOVE_SCHEDULE_PROCESS_POPUP: \"REMOVE_SCHEDULE_PROCESS_POPUP\",\r\n  FETCH_SCHEDULED_PROCESS_SUCCESS: \"FETCH_SCHEDULED_PROCESS_SUCCESS\",\r\n  FETCH_SCHEDULED_PROCESS_FAILURE: \"FETCH_SCHEDULED_PROCESS_FAILURE\",\r\n  REMOVE_SCHEDULED_PROCESS : \"REMOVE_SCHEDULED_PROCESS\",\r\n  DELETE_SCHEDULED_PROCESS_SUCCESS: \"DELETE_SCHEDULED_PROCESS_SUCCESS\",\r\n  DELETE_SCHEDULED_PROCESS_FAILURE: \"DELETE_SCHEDULED_PROCESS_FAILURE\",\r\n  FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS: \"FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS\",\r\n  FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE: \"FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE\",\r\n  REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP: \"REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP\",\r\n  REMOVE_SCHEDULED_PROCESS_DETAILS:\"REMOVE_SCHEDULED_PROCESS_DETAILS\"\r\n};\r\n\r\nexport default processActionTypes;\r\n","import { agentActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  agents: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst AgentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.AGENT_START_FETCH:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ACTION.AGENT_SET_ERROR:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.AGENT_REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_AGENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_AGENTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {},\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_FETCH_AGENTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_AGENT_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {\r\n            ...state.agents.data,\r\n            rows: state.agents.data.rows.map((agent) => {\r\n              if (agent.id === action.payload.id) {\r\n                return {\r\n                  ...agent,\r\n                  status: action.payload.status,\r\n                  updatedAt: action.payload.updatedAt,\r\n                  User: action.payload.User,\r\n                };\r\n              }\r\n              return agent;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_AGENT_STATUS_ARRAY:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {\r\n            ...state.agents.data,\r\n            rows: state.agents.data.rows.map((agent) => {\r\n              action.payload.data.forEach((item) => {\r\n                if (item.id === agent.id) {\r\n                  agent = {\r\n                    ...agent,\r\n                    status: action.payload.status,\r\n                    updatedAt: item.updatedAt,\r\n                  };\r\n                }\r\n              });\r\n              return agent;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_AGENT_IS_BUSY_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {\r\n            ...state.agents.data,\r\n            rows: state.agents.data.rows.map((agent) => {\r\n              if (agent.id === action.payload.id) {\r\n                return { ...agent, isBusy: action.payload.isBusy };\r\n              }\r\n              return agent;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AgentReducer;\r\n","import { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport { processActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  processes: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  processLogs: {\r\n    data: {},\r\n  },\r\n  scheduleProcesses: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  scheduleDetails: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst ProcessReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.PROCESS_START_FETCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ACTION.PROCESS_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.PROCESS_REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n    case ACTION.FETCH_ALL_PROCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n    case ACTION.UPDATE_ALL_PROCESS:\r\n      const { updateProcessId, log } = action.payload;\r\n      return {\r\n        ...state,\r\n        processes: {\r\n          ...state.processes,\r\n          data: {\r\n            ...state.processes.data,\r\n            rows: state.processes.data.rows.map((item) => {\r\n              if (item.id === updateProcessId) {\r\n                item.processExecutionLogs = [...item.processExecutionLogs, log];\r\n              }\r\n              return { ...item };\r\n            }),\r\n          },\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_PROCESS_BY_ID:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: {\r\n            ...state.processes.data,\r\n            rows: state.processes.data.rows.filter(\r\n              (item) => item.id !== action.payload\r\n            ),\r\n          },\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_ALL_PROCESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: [],\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_ALL_PROCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: [],\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_PROCESS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_PROCESS_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: {\r\n            ...state.processes.data,\r\n            rows: state.processes.data.rows.map((process) => {\r\n              if (process.id === action.payload.id) {\r\n                return {\r\n                  ...process,\r\n                  status: action.payload.status,\r\n                  updatedAt: action.payload.updatedAt,\r\n                };\r\n              }\r\n              return process;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n    case ACTION.CREATE_PROCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.bots,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.CREATE_PROCESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.bots,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_PROCESS_LOGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processLogs: {\r\n          ...state.processLogs,\r\n          data: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_PROCESS_LOGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processLogs: {\r\n          ...state.processLogs,\r\n          data: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_PROCESS_LOGS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processLogs: {\r\n          ...state.processLogs,\r\n          data: {},\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.SCHEDULE_PROCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scheduleProcesses: {\r\n          ...state.scheduleProcesses,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.SCHEDULE_PROCESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scheduleProcesses: {\r\n          ...state.scheduleProcesses,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n      case ACTION.FETCH_SCHEDULED_PROCESS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleProcesses: {\r\n            ...state.scheduleProcesses,\r\n            data: {...action.payload,rows : action.payload.rows.length ? \r\n              action.payload.rows.map(i=>{\r\n                return {\r\n                ...i,\r\n                duration : JSON.parse(i.duration)\r\n                }\r\n              })\r\n              :[]},\r\n          },\r\n          error: \"\",\r\n        };\r\n  \r\n      case ACTION.FETCH_SCHEDULED_PROCESS_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleProcesses: {\r\n            ...state.scheduleProcesses,\r\n            data: {},\r\n          },\r\n          error: \"\",\r\n        };\r\n\r\n    case ACTION.REMOVE_SCHEDULE_PROCESS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scheduleProcesses: {\r\n          ...state.scheduleProcesses,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n     \r\n    case ACTION.REMOVE_SCHEDULED_PROCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleProcesses: {\r\n            ...state.scheduleProcesses,\r\n            data: {},\r\n            message:\"\"\r\n          },\r\n          error: \"\",\r\n      };  \r\n\r\n    case ACTION.DELETE_SCHEDULED_PROCESS_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            scheduleProcesses: {\r\n              ...state.scheduleProcesses,\r\n              message :action.payload\r\n            },\r\n            error: \"\",\r\n      };\r\n    \r\n    case ACTION.DELETE_SCHEDULED_PROCESS_FAILURE:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            scheduleProcesses: {\r\n              ...state.scheduleProcesses,\r\n              message :action.payload,\r\n            },\r\n            error: \"\",\r\n      };  \r\n\r\n      case ACTION.FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleDetails: {\r\n            ...state.scheduleDetails,\r\n            data :{...action.payload,\r\n            duration: JSON.parse(action.payload.duration)\r\n            }\r\n          },\r\n          error: \"\",\r\n        };\r\n  \r\n      case ACTION.FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleDetails: {\r\n            ...state.scheduleDetails,\r\n            message:action.payload\r\n          },\r\n          error: \"\",\r\n        };  \r\n\r\n      case ACTION.REMOVE_SCHEDULED_PROCESS_DETAILS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleDetails: {\r\n            data:{},\r\n            message:\"\"\r\n          },\r\n          error: \"\",\r\n        };  \r\n\r\n      case ACTION.REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            scheduleDetails: {\r\n              ...state.scheduleDetails,\r\n              message:\"\"\r\n            },\r\n            error: \"\",\r\n        };    \r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ProcessReducer;\r\n","import { botActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  bots: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  botDetails: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst BotReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.BOT_START_FETCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ACTION.BOT_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.BOT_REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOTS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.CREATE_BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.CREATE_BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOT_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOT_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          data: {},\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOT_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOT_DETAILS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          data: { ...state.botDetails.data, isDeleted: true },\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: \"Bot Updated Successfully!\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BotReducer;\r\n","import { socketActionTypes as ACTION } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    socketObject: null,\r\n    error: ''\r\n};\r\n\r\nconst SocketReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ACTION.INITIATE_SOCKET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                socketObject: action.payload,\r\n                error: ''\r\n            };\r\n\r\n        case ACTION.INITIATE_SOCKET_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                socketObject: null,\r\n                error: action.payload\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default SocketReducer;\r\n\r\n","import { loginActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  success: localStorage.getItem(\"token\") ? true : false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.LOGIN_START_FETCH:\r\n      return { ...state, loading: true };\r\n\r\n    case ACTION.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: \"\",\r\n        message: action.payload,\r\n      };\r\n\r\n    case ACTION.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: \"\",\r\n        message: action.payload,\r\n      };\r\n\r\n    case ACTION.LOGIN_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n        message: \"\",\r\n      };\r\n\r\n    case ACTION.LOGIN_REMOVE_ERROR:\r\n      return { ...state, loading: false, error: \"\" };\r\n\r\n    case ACTION.REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        message: \"\",\r\n      };\r\n\r\n    case ACTION.LOGOUT:\r\n      return { ...state, loading: false, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default LoginReducer;\r\n","import { userActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: \"\",\r\n  registration: {\r\n    message: \"\",\r\n    success: false,\r\n  },\r\n  usersByPagging: {\r\n    data: {},\r\n  },\r\n  users: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  userDetails: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  userRole: [],\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.USER_START_FETCH:\r\n      return { ...state, loading: true };\r\n\r\n    case ACTION.USER_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.USER_REMOVE_ERROR:\r\n      return { ...state, loading: false, error: \"\" };\r\n\r\n    case ACTION.USER_REGISTRATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        registration: {\r\n          success: true,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ACTION.USER_REGISTRATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        registration: {\r\n          message: action.payload,\r\n          success: false,\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_REGISTRATION_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        registration: {\r\n          ...state.registration,\r\n          message: \"\",\r\n        },\r\n      };\r\n\r\n    case ACTION.SET_USER_ROLE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userRole: action.payload,\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_ROLE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userRole: [],\r\n      };\r\n\r\n    case ACTION.FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: {\r\n          message: \"\",\r\n          data: action.payload,\r\n        },\r\n      };\r\n\r\n    case ACTION.FETCH_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: {\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_USERS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: {\r\n          message: \"\",\r\n          data: {},\r\n        },\r\n      };\r\n\r\n    case ACTION.FETCH_USERS_BY_PAGGINATION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        usersByPagging: {\r\n          data: action.payload,\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_USERS_BY_PAGGINATION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        usersByPagging: {\r\n          data: {},\r\n        },\r\n      };\r\n\r\n    case ACTION.FETCH_USER_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_USER_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          data: {},\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_DETAILS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          data: { ...state.userDetails.data, isDeleted: true },\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: \"User Updated Successfully!\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import EventEmitter from \"eventemitter3\";\r\nconst eventEmitter = new EventEmitter();\r\nconst Emitter = {\r\n  on: (event, fn) => eventEmitter.on(event, fn),\r\n  once: (event, fn) => eventEmitter.once(event, fn),\r\n  off: (event, fn) => eventEmitter.off(event, fn),\r\n  emit: (event, payload) => eventEmitter.emit(event, payload),\r\n};\r\nObject.freeze(Emitter);\r\nexport default Emitter;","export default {\r\n  MESSAGE_EVENT_NAME: \"message\",\r\n  AUTHENTICATION_EVENT_NAME: \"authentication\",\r\n  JOIN_ROOM_EVENT_NAME: \"join-room\",\r\n  CONNECT_EVENT_NAME: \"connect\",\r\n  ROOM_NAME: \"controlroom\",\r\n  INCOMING_NOTIFICATION_EVENT_NAME: \"incoming-event\",\r\n  DISCONNECT_EVENT_NAME: \"disconnect\",\r\n  NOTIFICATION_SERVER_URL: \"http://192.168.1.166:4000\",\r\n};\r\n","import Emitter from \"./emitter\";\r\nimport clientIo from \"socket.io-client\";\r\nimport SOCKET_CONSTANTS from \"../../constants/event.constant\";\r\n\r\nclass Socket {\r\n  constructor() {\r\n    this.socket = undefined;\r\n  }\r\n  connect() {\r\n    if (!this.socket) {\r\n      this.socket = clientIo.connect(SOCKET_CONSTANTS.NOTIFICATION_SERVER_URL, {\r\n        reconnect: true,\r\n        forceNew: true,\r\n        autoConnect: true,\r\n        transports: [\"polling\"],\r\n      });\r\n    }\r\n  }\r\n  async initiateSocket() {\r\n    this.connect();\r\n    this.addListeners();\r\n  }\r\n\r\n  removeListener() {\r\n    if (this.socket) {\r\n      this.socket.off(SOCKET_CONSTANTS.MESSAGE_EVENT_NAME, ({ content }) => {\r\n        console.log(\"removing listeners\");\r\n        Emitter.emit(SOCKET_CONSTANTS.INCOMING_NOTIFICATION_EVENT_NAME, {\r\n          content,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  addListeners() {\r\n    if (this.socket) {\r\n      this.socket.on(SOCKET_CONSTANTS.CONNECT_EVENT_NAME, () => {\r\n        if (this.socket.connected) {\r\n          this.socket.emit(SOCKET_CONSTANTS.AUTHENTICATION_EVENT_NAME, {\r\n            token: localStorage.getItem(\"token\"),\r\n            roomId: SOCKET_CONSTANTS.ROOM_NAME,\r\n            userId: \"userId\",\r\n          });\r\n          this.socket.emit(SOCKET_CONSTANTS.JOIN_ROOM_EVENT_NAME, {\r\n            token: localStorage.getItem(\"token\"),\r\n            roomId: SOCKET_CONSTANTS.ROOM_NAME,\r\n            userId: \"userId\",\r\n          });\r\n          console.log(\"socket connected !!\");\r\n        }\r\n      });\r\n      this.socket.on(SOCKET_CONSTANTS.MESSAGE_EVENT_NAME, (data) => {\r\n        console.log(\"socket notification recieved !!\");\r\n        Emitter.emit(SOCKET_CONSTANTS.INCOMING_NOTIFICATION_EVENT_NAME, data);\r\n      });\r\n      this.socket.on(SOCKET_CONSTANTS.DISCONNECT_EVENT_NAME, () => {\r\n        console.log(\"socket disconnected\");\r\n      });\r\n    }\r\n  }\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = undefined;\r\n    }\r\n  }\r\n  getSocket() {\r\n    return this.socket;\r\n  }\r\n}\r\n\r\nconst socket = new Socket();\r\n\r\nexport default socket;\r\n","import { combineReducers } from \"redux\";\r\nimport AgentReducer from \"./agents\";\r\nimport ProcessReducer from \"./process\";\r\nimport BotReducer from \"./bots\";\r\nimport SocketReducer from \"./socket\";\r\nimport LoginReducer from \"./login\";\r\nimport UserReducer from \"./user\";\r\nimport { loginActionTypes } from \"../actionTypes\";\r\nimport { socket } from \"../../utils/service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst appReducer = combineReducers({\r\n  agents: AgentReducer,\r\n  bots: BotReducer,\r\n  socket: SocketReducer,\r\n  login: LoginReducer,\r\n  user: UserReducer,\r\n  process: ProcessReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === loginActionTypes.LOGOUT) {\r\n    localStorage.clear();\r\n    socket.disconnect();\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}