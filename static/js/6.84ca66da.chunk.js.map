{"version":3,"sources":["components/Login/Login.js"],"names":["Login","props","initialState","username","password","isLoggedIn","useState","state","setState","changeHandler","useHistory","e","s","target","name","value","style","padding","margin","maxWidth","CssBaseline","Typography","variant","align","component","gutterBottom","Paper","Grid","container","alignItems","spacing","item","xs","type","placeholder","onChange","Button","onClick","preventDefault","fetch","method","headers","body","JSON","stringify","email","then","r","json","token","localStorage","setItem","LoginConstant","tokenKey","window","location","href","catch","err","console","log","position","left"],"mappings":"gTAwFeA,G,MA1ED,SAACC,GACb,IAAMC,EAAe,CAACC,SAAS,GAAGC,SAAS,GAAGC,YAAW,GADlC,EAEEC,mBAASJ,GAFX,mBAEhBK,EAFgB,KAEVC,EAFU,KAyCjBC,GAtCUC,cAsCM,SAACC,GACnBH,GAAS,SAAAI,GAAC,kCACLA,GADK,kBAEPD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOE,aAG/B,OAAO,sBAAKC,MAAO,CAAEC,QAAS,GAAIC,OAAQ,OAAQC,SAAU,KAArD,UACL,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,UAAU,KAAKC,cAAY,EAAnE,qCAGA,+BACE,cAACC,EAAA,EAAD,CAAOV,MAAO,CAAEC,QAAS,IAAzB,SACE,eAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,aAAaC,QAAS,EAAjD,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,YAAY,WAAWpB,KAAK,WAAWqB,SAAU1B,EAAeM,MAAOR,EAAMJ,aAElG,cAACwB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,YAAY,WAAWpB,KAAK,WAAWC,MAAOR,EAAMH,SAAU+B,SAAU1B,MAEjG,cAACkB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,IAAD,WACE,cAACI,EAAA,EAAD,CAAQC,QA3DC,SAAC1B,GACpBA,EAAE2B,iBAIFC,MAHY,8BAGF,CACNC,OAHW,OAIXC,QAAQ,CACJ,eAAe,mBACf,OAAS,oBAEbC,KAAKC,KAAKC,UAAU,CAChBC,MAAMtC,EAAMJ,SACZC,SAASG,EAAMH,aAEpB0C,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAAQF,MAAK,SAAAE,GAAO,IACtBC,EAASD,EAATC,MACJA,GACCzC,GAAS,SAAAI,GAAC,kCACCA,GADD,IAEFP,YAAW,OAEnB6C,aAAaC,QAAQC,IAAcC,SAASJ,GAC5CK,OAAOC,SAASC,KAAhB,oBAGAhD,GAAS,SAAAI,GAAC,kCACHA,GADG,IAENP,YAAW,UAIpBoD,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MAEhBlD,GAAS,SAAAI,GAAC,kCAAOA,GAAKV,OAwBZ,mBACA,cAACkC,EAAA,EAAD,CAAQpB,MAAO,CAAC6C,SAAS,WAAWC,KAAK,QAAzC","file":"static/js/6.84ca66da.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  CssBaseline,\r\n} from '@material-ui/core';\r\nimport { Input } from \"antd\";\r\nimport ButtonGroup from \"antd/lib/button/button-group\";\r\nimport { LoginConstant } from \"../../constants/token.contants\";\r\nimport { useHistory } from \"react-router\";\r\nimport { pushToLink } from \"../../utils/helpers/global\";\r\n\r\nconst Login = (props) => {\r\n  const initialState = {username:'',password:'',isLoggedIn:false}\r\n  const [state,setState] = useState(initialState)\r\n  const history = useHistory()\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const url = \"https://reqres.in/api/login\"\r\n    const method = \"POST\"\r\n   \r\n    fetch(url,{\r\n        method:method,\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Accept\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            email:state.username,\r\n            password:state.password\r\n        })\r\n    }).then(r=>r.json()).then(json=>{\r\n        const {token} = json\r\n        if(token){\r\n            setState(s=>({\r\n                    ...s,\r\n                    isLoggedIn:true\r\n            }))\r\n            localStorage.setItem(LoginConstant.tokenKey,token)\r\n            window.location.href = `controlroom/home`;\r\n        }\r\n        else{\r\n            setState(s=>({\r\n                ...s,\r\n                isLoggedIn:false\r\n        }))\r\n        }\r\n            \r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    setState(s=>({...s,...initialState}))\r\n  }\r\n  const changeHandler = (e) =>{\r\n      setState(s=>({\r\n        ...s,\r\n        [e.target.name]:e.target.value\r\n      }))\r\n  }\r\n  return <div style={{ padding: 16, margin: 'auto', maxWidth: 600 }}>\r\n    <CssBaseline />\r\n    <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n      üèÅ Login Form\r\n    </Typography>\r\n    <form>\r\n      <Paper style={{ padding: 16 }}>\r\n        <Grid container alignItems=\"flex-start\" spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Input type='text' placeholder='username' name='username' onChange={changeHandler} value={state.username}/>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Input type='password' placeholder='password' name='password' value={state.password} onChange={changeHandler} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ButtonGroup>\r\n              <Button onClick={handleSubmit}>Login</Button>\r\n              <Button style={{position:'absolute',left:'30vw'}}>Reset</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </form>\r\n  </div>\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}