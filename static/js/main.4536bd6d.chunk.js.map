{"version":3,"sources":["containers/Sidebar/sidebar.module.css","containers/Header/header.module.css","containers/Layout/layout.module.css","containers/routes.js","containers/Sidebar/Sidebar.js","components/PageNotFound/PageNotFound.js","containers/Content/Content.js","containers/Layout/Layout.js","App.js","reportWebVitals.js","redux/actionTypes/agents.js","redux/actionTypes/bots.js","redux/actionTypes/socket.js","redux/actionTypes/login.js","redux/actionTypes/user.js","redux/actionTypes/process.js","redux/reducers/agents.js","redux/reducers/process.js","redux/reducers/bots.js","redux/reducers/socket.js","redux/reducers/login.js","redux/reducers/user.js","utils/service/emitter.js","constants/event.constant.js","utils/service/socket.js","redux/reducers/index.js","redux/store.js","index.js","constants/token.contants.js","utils/helpers/global.js"],"names":["module","exports","Dashboard","React","lazy","Login","Home","routes","Admin","key","path","content","icon","DashboardOutlined","title","exact","component","KeyOutlined","NaiveUser","Sidebar","props","history","useHistory","collapsed","onCollapse","Sider","Layout","SubMenu","Menu","useState","localStorage","getItem","LoginConstant","tokenKey","handleItemChange","link","pushToLink","collapsible","className","styles","sidebar","collapsedWidth","style","height","theme","mode","length","map","item","children","i","Item","onClick","PageNotFound","overflow","display","justifyContent","backgroundColor","width","marginTop","src","preview","alignItems","type","size","marginLeft","push","AppContent","routeList","guest","isLogin","Fragment","route","index","name","render","to","AppLayout","Content","setCollapsed","undefined","windowWidth","setWindowWidth","useDimensions","useEffect","useCallback","minHeight","paddingTop","paddingLeft","Spinner","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","agentActionTypes","AGENT_START_FETCH","AGENT_SET_ERROR","AGENT_REMOVE_ERROR","FETCH_AGENTS_REQUEST","FETCH_AGENTS_SUCCESS","FETCH_AGENTS_FAILURE","REMOVE_FETCH_AGENTS","UPDATE_AGENT_STATUS","UPDATE_AGENT_STATUS_ARRAY","UPDATE_AGENT_IS_BUSY_STATUS","botActionTypes","BOT_START_FETCH","BOT_SET_ERROR","BOT_REMOVE_ERROR","FETCH_BOTS_REQUEST","FETCH_BOTS_SUCCESS","FETCH_BOTS_FAILURE","REMOVE_BOTS","REMOVE_BOTS_POPUP","CREATE_BOT_REQUEST","CREATE_BOT_SUCCESS","CREATE_BOT_FAILURE","FETCH_BOT_DETAILS_REQUEST","FETCH_BOT_DETAILS_SUCCESS","FETCH_BOT_DETAILS_FAILURE","REMOVE_BOT_DETAILS","REMOVE_BOT_DETAILS_POPUP","DELETE_BOT_REQUEST","DELETE_BOT_SUCCESS","DELETE_BOT_FAILURE","UPDATE_BOT_REQUEST","UPDATE_BOT_SUCCESS","UPDATE_BOT_FAILURE","socketActionTypes","INITIATE_SOCKET_SUCCESS","INITIATE_SOCKET_FAILURE","loginActionTypes","LOGIN_START_FETCH","LOGIN_SET_ERROR","LOGIN_REMOVE_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REMOVE_POPUP","LOGOUT","userActionTypes","USER_START_FETCH","USER_SET_ERROR","USER_REMOVE_ERROR","USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAILURE","REMOVE_USER_REGISTRATION_POPUP","GET_USER_ROLE","SET_USER_ROLE","REMOVE_USER_ROLE","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","REMOVE_USERS","FETCH_USERS_BY_PAGGINATION","REMOVE_USERS_BY_PAGGINATION","FETCH_USER_DETAILS_SUCCESS","FETCH_USER_DETAILS_FAILURE","REMOVE_USER_DETAILS","REMOVE_USER_DETAILS_POPUP","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","processActionTypes","PROCESS_START_FETCH","PROCESS_SET_ERROR","PROCESS_REMOVE_ERROR","FETCH_ALL_PROCESS_REQUEST","FETCH_ALL_PROCESS_SUCCESS","FETCH_ALL_PROCESS_FAILURE","REMOVE_ALL_PROCESS","UPDATE_ALL_PROCESS","UPDATE_PROCESS_STATUS","REMOVE_PROCESS_BY_ID","REMOVE_PROCESS_POPUP","FETCH_PROCESS_LOGS_REQUEST","FETCH_PROCESS_LOGS_SUCCESS","FETCH_PROCESS_LOGS_FAILURE","REMOVE_PROCESS_LOGS","CREATE_PROCESS_REQUEST","CREATE_PROCESS_SUCCESS","CREATE_PROCESS_FAILURE","SCHEDULE_PROCESS_SUCCESS","SCHEDULE_PROCESS_FAILURE","REMOVE_SCHEDULE_PROCESS_POPUP","FETCH_SCHEDULED_PROCESS_SUCCESS","FETCH_SCHEDULED_PROCESS_FAILURE","REMOVE_SCHEDULED_PROCESS","DELETE_SCHEDULED_PROCESS_SUCCESS","DELETE_SCHEDULED_PROCESS_FAILURE","FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS","FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE","REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP","REMOVE_SCHEDULED_PROCESS_DETAILS","initialState","loading","agents","data","message","error","AgentReducer","state","action","ACTION","payload","rows","agent","id","status","updatedAt","User","forEach","isBusy","processes","processLogs","scheduleProcesses","scheduleDetails","ProcessReducer","updateProcessId","log","processExecutionLogs","filter","process","bots","duration","JSON","parse","botDetails","BotReducer","isDeleted","socketObject","SocketReducer","success","LoginReducer","registration","usersByPagging","users","userDetails","userRole","UserReducer","eventEmitter","EventEmitter","Emitter","on","event","fn","once","off","emit","Object","freeze","socket","this","clientIo","connect","SOCKET_CONSTANTS","reconnect","forceNew","autoConnect","transports","addListeners","console","connected","token","roomId","userId","disconnect","appReducer","combineReducers","login","user","rootReducer","clear","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById","pathname","getWindowDimension","window","innerWidth","innerHeight","dimensions","setDimensions","handleDimensionChange","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/main.4536bd6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__33x1m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2I39H\",\"toggleButton\":\"header_toggleButton__1UwEs\",\"company_logo\":\"header_company_logo__1fQFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"layout_header__3TSir\"};","import React from \"react\";\r\nimport { DashboardOutlined, HistoryOutlined, KeyOutlined } from \"@ant-design/icons\";\r\n\r\nconst Dashboard = React.lazy(() => import(\"../components/Dashboard\"));\r\nconst Login = React.lazy(() => import(\"../components/Login\"));\r\nconst Home = React.lazy(() => import(\"../components/Home\"));\r\n\r\n\r\nconst Tab2 = (props) => {\r\n  return <h1>tab2 Page Here</h1>\r\n}\r\n//Defining User Role Based Routes\r\nconst basename = process.env.PUBLIC_URL\r\nconst routes = {\r\n  Admin: [\r\n\r\n    {\r\n      key: 1,\r\n      path: `/controlroom/dashboard`,\r\n      content: \"Dashboard\",\r\n      icon: <DashboardOutlined />,\r\n      title: \"dashboard\",\r\n      exact: true,\r\n      component: Dashboard,\r\n    },\r\n    {\r\n      key: 3,\r\n      path: `/controlroom/home`,\r\n      content: \"Home\",\r\n      title: \"Home\",\r\n      icon: <KeyOutlined />,\r\n      exact: true,\r\n      component: Home,\r\n    }\r\n  ],\r\n  NaiveUser: [\r\n    {\r\n      key: 2,\r\n      path: `/controlroom/login`,\r\n      content: \"Login\",\r\n      title: \"tab1\",\r\n      icon: <KeyOutlined />,\r\n      component: Login,\r\n    }\r\n  ]\r\n};\r\n\r\nexport default routes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\n// import menuList from \"./menuList\";\r\nimport styles from \"./sidebar.module.css\";\r\nimport { pushToLink } from \"../../utils/helpers/global\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\nimport { LoginConstant } from \"../../constants/token.contants\";\r\n// import { getUserRole } from \"../../utils/helpers/global\";\r\n\r\nconst Sidebar = (props) => {\r\n  const history = useHistory();\r\n  const { collapsed, onCollapse } = props;\r\n  const { Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const [isLoggedIn] = useState(localStorage.getItem(LoginConstant.tokenKey))\r\n  const content = isLoggedIn?routes.Admin:routes.NaiveUser;\r\n  const handleItemChange = (link) => {\r\n    pushToLink(history, link);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      collapsible={true}\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      className={styles.sidebar}\r\n      collapsedWidth={0}\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Menu\r\n        theme={\"dark\"}\r\n        mode=\"inline\"\r\n      >\r\n        {content && content.length &&  content.map((item) => {\r\n            return item.children && !!item.children.length ? (\r\n              <SubMenu key={item.key} icon={item.icon} title={item.title}>\r\n                {item.children.map((i) => (\r\n                  <Menu.Item\r\n                    key={i.key}\r\n                    icon={i.icon}\r\n                    onClick={() => handleItemChange(i.path)}\r\n                  >\r\n                    {i.content}\r\n                  </Menu.Item>\r\n                ))}\r\n              </SubMenu>\r\n            ) : (\r\n              <Menu.Item\r\n                key={item.key}\r\n                icon={item.icon}\r\n                onClick={() => handleItemChange(item.path)}\r\n              >\r\n                {item.content}\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Button, Card, Image, Row } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PageNotFound = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#383838\",\r\n        //backgroundColor:\"#00001a\"\r\n      }}\r\n    >\r\n      <Card\r\n        style={{\r\n          width: \"95%\",\r\n          height: \"75%\",\r\n          marginTop: \"5%\",\r\n          backgroundColor: \"#D3D3D3\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          <Row\r\n            style={{\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              src=\"https://media.istockphoto.com/vectors/vector-illustration-404-page-design-vector-id937239796?b=1&k=6&m=937239796&s=612x612&w=0&h=OWZxaKtFgkG3XUZO3wxNlBQ_ZwTeY4VfWJbJ-kIIJg4=\"\r\n              style={{ width: \"100%\", marginTop: \"3%\" }}\r\n              preview={false}\r\n            />\r\n          </Row>\r\n          <Row\r\n            style={{\r\n              justifyContent: \"center\",\r\n              marginTop: \"3%\",\r\n              //color: \"white\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>\r\n                <b>The Page You Are Looking For Not Found!</b>\r\n              </h2>\r\n              <br />\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                style={{ marginLeft: \"150px\" }}\r\n                onClick={() => history.push(\"/controlroom/home\")}\r\n              >\r\n                Go Home\r\n              </Button>\r\n            </div>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { useState } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport PageNotFound from \"../../components/PageNotFound/PageNotFound\";\r\nimport { LoginConstant } from \"../../constants/token.contants\";\r\nimport routes from \"../routes\";\r\n// import { getUserRole } from \"../../utils/helpers/global\";\r\n\r\nconst AppContent = () => {\r\n  const routeList = routes.Admin;\r\n  const guest = routes.NaiveUser;\r\n  const basename = process.env.PUBLIC_URL\r\n  const [isLogin] = useState(localStorage.getItem(LoginConstant.tokenKey))\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        isLogin ? <Switch>\r\n          {\r\n\r\n            routeList.map((route, index) => <Route\r\n              key={route.key}\r\n              path={`${route.path}`}\r\n              name={route.name}\r\n              render={(props) => <route.component {...props} />}\r\n              exact={route.exact}\r\n            />\r\n            )\r\n          }\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n          : <Switch>\r\n            {\r\n              guest.map((route, index) => <Route\r\n                key={route.key}\r\n                path={`${route.path}`}\r\n                name={route.name}\r\n                render={(props) => <route.component {...props} />}\r\n                exact={route.exact}\r\n              />\r\n              )\r\n            }\r\n            <Route render={()=><Redirect to='/controlroom/login' />} />\r\n          </Switch>\r\n      }\r\n\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppContent;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport AppHeader from \"../Header/Header\";\r\nimport styles from \"./layout.module.css\";\r\nimport { useDimensions } from \"../../utils/helpers/global\";\r\nimport AppContent from \"../Content/Content\";\r\n\r\nconst AppLayout = (props) => {\r\n  const {Content } = Layout;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(undefined);\r\n  const { width } = useDimensions();\r\n  useEffect(() => {\r\n    if (width < 1040) {\r\n      setCollapsed(true);\r\n      setWindowWidth(width);\r\n    } else {\r\n      setWindowWidth(width);\r\n      setCollapsed(false);\r\n    }\r\n  }, [width]);\r\n\r\n  const onCollapse = useCallback(\r\n    (collapsed) => {\r\n      setCollapsed(collapsed);\r\n    },\r\n    [width, collapsed]\r\n  );\r\n\r\n  return (\r\n      <Layout className=\"site-layout\">\r\n        <Sidebar collapsed={collapsed} onCollapse={onCollapse} {...props} />\r\n        <Content\r\n          style={{\r\n            minHeight: \"100vh\",\r\n            paddingTop: \"64px\",\r\n            paddingLeft: collapsed\r\n              ? windowWidth > 900\r\n                ? \"7%\"\r\n                : \"10%\"\r\n              : windowWidth > 900\r\n              ? \"15%\"\r\n              : \"23%\",\r\n          }}\r\n        >\r\n          <AppContent {...props} />\r\n        </Content>\r\n      </Layout>\r\n  );\r\n};\r\n\r\nexport default AppLayout;\r\n","import React, { Suspense } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  HashRouter,\r\n  // Redirect,\r\n  // Route,\r\n  // Switch,\r\n} from \"react-router-dom\";\r\nimport AppLayout from \"./containers/Layout\";\r\n// import { LoginConstant } from \"./constants/token.contants\";\r\n\r\n\r\nconst Spinner = () => (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n);\r\n\r\n//Importing Components\r\n// const Login = React.lazy(() => import(\"./components/Login\"));\r\n// const Home = React.lazy(() => import(\"./components/Home\"));\r\n// const PageNotFound = React.lazy(() =>\r\n//   import(\"./components/PageNotFound/PageNotFound\")\r\n// );\r\n\r\nfunction App(props) {\r\n \r\n  return (\r\n    <HashRouter>\r\n      <Suspense fallback={<Spinner />}>    \r\n          <AppLayout {...props} />\r\n      </Suspense>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const agentActionTypes = {\r\n  AGENT_START_FETCH: \"AGENT_START_FETCH\",\r\n  AGENT_SET_ERROR: \"AGENT_SET_ERROR\",\r\n  AGENT_REMOVE_ERROR: \"AGENT_REMOVE_ERROR\",\r\n  FETCH_AGENTS_REQUEST: \"FETCH_AGENTS_REQUEST\",\r\n  FETCH_AGENTS_SUCCESS: \"FETCH_AGENTS_SUCCESS\",\r\n  FETCH_AGENTS_FAILURE: \"FETCH_AGENTS_FAILURE\",\r\n  REMOVE_FETCH_AGENTS: \"REMOVE_FETCH_AGENTS\",\r\n  UPDATE_AGENT_STATUS: \"UPDATE_AGENT_STATUS\",\r\n  UPDATE_AGENT_STATUS_ARRAY: \"UPDATE_AGENT_STATUS_ARRAY\",\r\n  UPDATE_AGENT_IS_BUSY_STATUS: \"UPDATE_AGENT_IS_BUSY_STATUS\",\r\n};\r\n\r\nexport default agentActionTypes;\r\n","const botActionTypes = {\r\n  BOT_START_FETCH: \"BOT_START_FETCH\",\r\n  BOT_SET_ERROR: \"BOT_SET_ERROR\",\r\n  BOT_REMOVE_ERROR: \"BOT_REMOVE_ERROR\",\r\n  FETCH_BOTS_REQUEST: \"FETCH_BOTS_REQUEST\",\r\n  FETCH_BOTS_SUCCESS: \"FETCH_BOTS_SUCCESS\",\r\n  FETCH_BOTS_FAILURE: \"FETCH_BOTS_FAILURE\",\r\n  REMOVE_BOTS: \"REMOVE_BOTS\",\r\n  REMOVE_BOTS_POPUP: \"REMOVE_BOTS_POPUP\",\r\n  CREATE_BOT_REQUEST: \"CREATE_BOT_REQUEST\",\r\n  CREATE_BOT_SUCCESS: \"CREATE_BOT_SUCCESS\",\r\n  CREATE_BOT_FAILURE: \"CREATE_BOT_FAILURE\",\r\n  FETCH_BOT_DETAILS_REQUEST: \"FETCH_BOT_DETAILS_REQUEST\",\r\n  FETCH_BOT_DETAILS_SUCCESS: \"FETCH_BOT_DETAILS_SUCCESS\",\r\n  FETCH_BOT_DETAILS_FAILURE: \"FETCH_BOT_DETAILS_FAILURE\",\r\n  REMOVE_BOT_DETAILS: \"REMOVE_BOT_DETAILS\",\r\n  REMOVE_BOT_DETAILS_POPUP: \"REMOVE_BOT_DETAILS_POPUP\",\r\n  DELETE_BOT_REQUEST: \"DELETE_BOT_REQUEST\",\r\n  DELETE_BOT_SUCCESS: \"DELETE_BOT_SUCCESS\",\r\n  DELETE_BOT_FAILURE: \"DELETE_BOT_FAILURE\",\r\n  UPDATE_BOT_REQUEST: \"UPDATE_BOT_REQUEST\",\r\n  UPDATE_BOT_SUCCESS: \"UPDATE_BOT_SUCCESS\",\r\n  UPDATE_BOT_FAILURE: \"UPDATE_BOT_FAILURE\",\r\n};\r\n\r\nexport default botActionTypes;\r\n","const socketActionTypes = {\r\n    INITIATE_SOCKET_SUCCESS: 'INITIATE_SOCKET_SUCCESS',\r\n    INITIATE_SOCKET_FAILURE: 'INITIATE_SOCKET_FAILURE'\r\n}\r\n\r\nexport default socketActionTypes;","const loginActionTypes = {\r\n  LOGIN_START_FETCH:\"LOGIN_START_FETCH\",\r\n  LOGIN_SET_ERROR:\"LOGIN_SET_ERROR\",\r\n  LOGIN_REMOVE_ERROR:\"LOGIN_REMOVE_ERROR\",\r\n  LOGIN_REQUEST: \"LOGIN_REQUEST\",\r\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\r\n  LOGIN_FAILURE: \"LOGIN_FAILURE\",\r\n  REMOVE_POPUP: \"REMOVE_POPUP\",\r\n  LOGOUT: \"LOGOUT\",\r\n};\r\n\r\nexport default loginActionTypes;\r\n","const userActionTypes = {\r\n  USER_START_FETCH:\"USER_START_FETCH\",\r\n  USER_SET_ERROR:\"USER_SET_ERROR\",\r\n  USER_REMOVE_ERROR:\"USER_REMOVE_ERROR\",\r\n  USER_REGISTRATION_REQUEST: \"USER_REGISTRATION_REQUEST\",\r\n  USER_REGISTRATION_SUCCESS: \"USER_REGISTRATION_SUCCESS\",\r\n  USER_REGISTRATION_FAILURE: \"USER_REGISTRATION_FAILURE\",\r\n  REMOVE_USER_REGISTRATION_POPUP: \"REMOVE_USER_REGISTRATION_POPUP\",\r\n  GET_USER_ROLE: \"GET_USER_ROLE\",\r\n  SET_USER_ROLE: \"GET_USER_ROLE\",\r\n  REMOVE_USER_ROLE: \"REMOVE_USER_ROLE\",\r\n  FETCH_USERS_REQUEST: \"FETCH_USERS_REQUEST\",\r\n  FETCH_USERS_SUCCESS: \"FETCH_USERS_SUCCESS\",\r\n  FETCH_USERS_FAILURE: \"FETCH_USERS_FAILURE\",\r\n  REMOVE_USERS: \"REMOVE_USERS\",\r\n  FETCH_USERS_BY_PAGGINATION: \"FETCH_USERS_BY_PAGGINATION\",\r\n  REMOVE_USERS_BY_PAGGINATION: \"REMOVE_USERS_BY_PAGGINATION\",\r\n  FETCH_USER_DETAILS_SUCCESS: \"FETCH_USER_DETAILS_SUCCESS\",\r\n  FETCH_USER_DETAILS_FAILURE: \"FETCH_USER_DETAILS_FAILURE\",\r\n  REMOVE_USER_DETAILS: \"REMOVE_USER_DETAILS\",\r\n  REMOVE_USER_DETAILS_POPUP: \"REMOVE_USER_DETAILS_POPUP\",\r\n  DELETE_USER_SUCCESS: \"DELETE_USER_SUCCESS\",\r\n  DELETE_USER_FAILURE: \"DELETE_USER_FAILURE\",\r\n  UPDATE_USER_SUCCESS: \"UPDATE_USER_SUCCESS\",\r\n  UPDATE_USER_FAILURE: \"UPDATE_USER_FAILURE\",\r\n};\r\n\r\nexport default userActionTypes;\r\n","const processActionTypes = {\r\n  PROCESS_START_FETCH:\"PROCESS_START_FETCH\",\r\n  PROCESS_SET_ERROR:\"PROCESS_SET_ERROR\",\r\n  PROCESS_REMOVE_ERROR:\"PROCESS_REMOVE_ERROR\",\r\n  FETCH_ALL_PROCESS_REQUEST: \"FETCH_ALL_PROCESS_REQUEST\",\r\n  FETCH_ALL_PROCESS_SUCCESS: \"FETCH_ALL_PROCESS_SUCCESS\",\r\n  FETCH_ALL_PROCESS_FAILURE: \"FETCH_ALL_PROCESS_FAILURE\",\r\n  REMOVE_ALL_PROCESS: \"REMOVE_ALL_PROCESS\",\r\n  UPDATE_ALL_PROCESS: \"UPDATE_ALL_PROCESS\",\r\n  UPDATE_PROCESS_STATUS: \"UPDATE_PROCESS_STATUS\",\r\n  REMOVE_PROCESS_BY_ID: \"REMOVE_PROCESS_BY_ID\",\r\n  REMOVE_PROCESS_POPUP: \"REMOVE_PROCESS_POPUP\",\r\n  FETCH_PROCESS_LOGS_REQUEST: \"FETCH_PROCESS_LOGS_REQUEST\",\r\n  FETCH_PROCESS_LOGS_SUCCESS: \"FETCH_PROCESS_LOGS_SUCCESS\",\r\n  FETCH_PROCESS_LOGS_FAILURE: \"FETCH_PROCESS_LOGS_FAILURE\",\r\n  REMOVE_PROCESS_LOGS: \"REMOVE_PROCESS_LOGS\",\r\n  CREATE_PROCESS_REQUEST: \"CREATE_PROCESS_REQUEST\",\r\n  CREATE_PROCESS_SUCCESS: \"CREATE_PROCESS_SUCCESS\",\r\n  CREATE_PROCESS_FAILURE: \"CREATE_PROCESS_FAILURE\",\r\n  SCHEDULE_PROCESS_SUCCESS: \"SCHEDULE_PROCESS_SUCCESS\",\r\n  SCHEDULE_PROCESS_FAILURE: \"SCHEDULE_PROCESS_FAILURE\",\r\n  REMOVE_SCHEDULE_PROCESS_POPUP: \"REMOVE_SCHEDULE_PROCESS_POPUP\",\r\n  FETCH_SCHEDULED_PROCESS_SUCCESS: \"FETCH_SCHEDULED_PROCESS_SUCCESS\",\r\n  FETCH_SCHEDULED_PROCESS_FAILURE: \"FETCH_SCHEDULED_PROCESS_FAILURE\",\r\n  REMOVE_SCHEDULED_PROCESS : \"REMOVE_SCHEDULED_PROCESS\",\r\n  DELETE_SCHEDULED_PROCESS_SUCCESS: \"DELETE_SCHEDULED_PROCESS_SUCCESS\",\r\n  DELETE_SCHEDULED_PROCESS_FAILURE: \"DELETE_SCHEDULED_PROCESS_FAILURE\",\r\n  FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS: \"FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS\",\r\n  FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE: \"FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE\",\r\n  REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP: \"REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP\",\r\n  REMOVE_SCHEDULED_PROCESS_DETAILS:\"REMOVE_SCHEDULED_PROCESS_DETAILS\"\r\n};\r\n\r\nexport default processActionTypes;\r\n","import { agentActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  agents: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst AgentReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.AGENT_START_FETCH:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ACTION.AGENT_SET_ERROR:\r\n      debugger\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.AGENT_REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_AGENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_AGENTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {},\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_FETCH_AGENTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_AGENT_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {\r\n            ...state.agents.data,\r\n            rows: state.agents.data.rows.map((agent) => {\r\n              if (agent.id === action.payload.id) {\r\n                return {\r\n                  ...agent,\r\n                  status: action.payload.status,\r\n                  updatedAt: action.payload.updatedAt,\r\n                  User: action.payload.User,\r\n                };\r\n              }\r\n              return agent;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_AGENT_STATUS_ARRAY:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {\r\n            ...state.agents.data,\r\n            rows: state.agents.data.rows.map((agent) => {\r\n              action.payload.data.forEach((item) => {\r\n                if (item.id === agent.id) {\r\n                  agent = {\r\n                    ...agent,\r\n                    status: action.payload.status,\r\n                    updatedAt: item.updatedAt,\r\n                  };\r\n                }\r\n              });\r\n              return agent;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_AGENT_IS_BUSY_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        agents: {\r\n          ...state.agents,\r\n          data: {\r\n            ...state.agents.data,\r\n            rows: state.agents.data.rows.map((agent) => {\r\n              if (agent.id === action.payload.id) {\r\n                return { ...agent, isBusy: action.payload.isBusy };\r\n              }\r\n              return agent;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AgentReducer;\r\n","import { act } from \"react-dom/cjs/react-dom-test-utils.production.min\";\r\nimport { processActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  processes: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  processLogs: {\r\n    data: {},\r\n  },\r\n  scheduleProcesses: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  scheduleDetails: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst ProcessReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.PROCESS_START_FETCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ACTION.PROCESS_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.PROCESS_REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n    case ACTION.FETCH_ALL_PROCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n    case ACTION.UPDATE_ALL_PROCESS:\r\n      const { updateProcessId, log } = action.payload;\r\n      return {\r\n        ...state,\r\n        processes: {\r\n          ...state.processes,\r\n          data: {\r\n            ...state.processes.data,\r\n            rows: state.processes.data.rows.map((item) => {\r\n              if (item.id === updateProcessId) {\r\n                item.processExecutionLogs = [...item.processExecutionLogs, log];\r\n              }\r\n              return { ...item };\r\n            }),\r\n          },\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_PROCESS_BY_ID:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: {\r\n            ...state.processes.data,\r\n            rows: state.processes.data.rows.filter(\r\n              (item) => item.id !== action.payload\r\n            ),\r\n          },\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_ALL_PROCESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: [],\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_ALL_PROCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: [],\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_PROCESS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_PROCESS_STATUS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.processes,\r\n          data: {\r\n            ...state.processes.data,\r\n            rows: state.processes.data.rows.map((process) => {\r\n              if (process.id === action.payload.id) {\r\n                return {\r\n                  ...process,\r\n                  status: action.payload.status,\r\n                  updatedAt: action.payload.updatedAt,\r\n                };\r\n              }\r\n              return process;\r\n            }),\r\n          },\r\n        },\r\n        error: \"\",\r\n      };\r\n    case ACTION.CREATE_PROCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.bots,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.CREATE_PROCESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processes: {\r\n          ...state.bots,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_PROCESS_LOGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processLogs: {\r\n          ...state.processLogs,\r\n          data: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_PROCESS_LOGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processLogs: {\r\n          ...state.processLogs,\r\n          data: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_PROCESS_LOGS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        processLogs: {\r\n          ...state.processLogs,\r\n          data: {},\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.SCHEDULE_PROCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scheduleProcesses: {\r\n          ...state.scheduleProcesses,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.SCHEDULE_PROCESS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scheduleProcesses: {\r\n          ...state.scheduleProcesses,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n      case ACTION.FETCH_SCHEDULED_PROCESS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleProcesses: {\r\n            ...state.scheduleProcesses,\r\n            data: {...action.payload,rows : action.payload.rows.length ? \r\n              action.payload.rows.map(i=>{\r\n                return {\r\n                ...i,\r\n                duration : JSON.parse(i.duration)\r\n                }\r\n              })\r\n              :[]},\r\n          },\r\n          error: \"\",\r\n        };\r\n  \r\n      case ACTION.FETCH_SCHEDULED_PROCESS_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleProcesses: {\r\n            ...state.scheduleProcesses,\r\n            data: {},\r\n          },\r\n          error: \"\",\r\n        };\r\n\r\n    case ACTION.REMOVE_SCHEDULE_PROCESS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scheduleProcesses: {\r\n          ...state.scheduleProcesses,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n     \r\n    case ACTION.REMOVE_SCHEDULED_PROCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleProcesses: {\r\n            ...state.scheduleProcesses,\r\n            data: {},\r\n            message:\"\"\r\n          },\r\n          error: \"\",\r\n      };  \r\n\r\n    case ACTION.DELETE_SCHEDULED_PROCESS_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            scheduleProcesses: {\r\n              ...state.scheduleProcesses,\r\n              message :action.payload\r\n            },\r\n            error: \"\",\r\n      };\r\n    \r\n    case ACTION.DELETE_SCHEDULED_PROCESS_FAILURE:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            scheduleProcesses: {\r\n              ...state.scheduleProcesses,\r\n              message :action.payload,\r\n            },\r\n            error: \"\",\r\n      };  \r\n\r\n      case ACTION.FETCH_SCHEDULED_PROCESS_DETAILS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleDetails: {\r\n            ...state.scheduleDetails,\r\n            data :{...action.payload,\r\n            duration: JSON.parse(action.payload.duration)\r\n            }\r\n          },\r\n          error: \"\",\r\n        };\r\n  \r\n      case ACTION.FETCH_SCHEDULED_PROCESS_DETAILS_FAILURE:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleDetails: {\r\n            ...state.scheduleDetails,\r\n            message:action.payload\r\n          },\r\n          error: \"\",\r\n        };  \r\n\r\n      case ACTION.REMOVE_SCHEDULED_PROCESS_DETAILS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          scheduleDetails: {\r\n            data:{},\r\n            message:\"\"\r\n          },\r\n          error: \"\",\r\n        };  \r\n\r\n      case ACTION.REMOVE_SCHEDULED_PROCESS_DETAILS_POPUP:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            scheduleDetails: {\r\n              ...state.scheduleDetails,\r\n              message:\"\"\r\n            },\r\n            error: \"\",\r\n        };    \r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ProcessReducer;\r\n","import { botActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  bots: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  botDetails: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst BotReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.BOT_START_FETCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ACTION.BOT_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.BOT_REMOVE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOTS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.CREATE_BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.CREATE_BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        bots: {\r\n          ...state.bots,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOT_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_BOT_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          data: {},\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOT_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_BOT_DETAILS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          data: { ...state.botDetails.data, isDeleted: true },\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_BOT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: \"Bot Updated Successfully!\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_BOT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        botDetails: {\r\n          ...state.botDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BotReducer;\r\n","import { socketActionTypes as ACTION } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    socketObject: null,\r\n    error: ''\r\n};\r\n\r\nconst SocketReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ACTION.INITIATE_SOCKET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                socketObject: action.payload,\r\n                error: ''\r\n            };\r\n\r\n        case ACTION.INITIATE_SOCKET_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                socketObject: null,\r\n                error: action.payload\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default SocketReducer;\r\n\r\n","import { loginActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  success: localStorage.getItem(\"token\") ? true : false,\r\n  error: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.LOGIN_START_FETCH:\r\n      return { ...state, loading: true };\r\n\r\n    case ACTION.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        error: \"\",\r\n        message: action.payload,\r\n      };\r\n\r\n    case ACTION.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: \"\",\r\n        message: action.payload,\r\n      };\r\n\r\n    case ACTION.LOGIN_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n        message: \"\",\r\n      };\r\n\r\n    case ACTION.LOGIN_REMOVE_ERROR:\r\n      return { ...state, loading: false, error: \"\" };\r\n\r\n    case ACTION.REMOVE_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        message: \"\",\r\n      };\r\n\r\n    case ACTION.LOGOUT:\r\n      return { ...state, loading: false, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default LoginReducer;\r\n","import { userActionTypes as ACTION } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: \"\",\r\n  registration: {\r\n    message: \"\",\r\n    success: false,\r\n  },\r\n  usersByPagging: {\r\n    data: {},\r\n  },\r\n  users: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  userDetails: {\r\n    data: {},\r\n    message: \"\",\r\n  },\r\n  userRole: [],\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION.USER_START_FETCH:\r\n      return { ...state, loading: true };\r\n\r\n    case ACTION.USER_SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ACTION.USER_REMOVE_ERROR:\r\n      return { ...state, loading: false, error: \"\" };\r\n\r\n    case ACTION.USER_REGISTRATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        registration: {\r\n          success: true,\r\n          message: action.payload,\r\n        },\r\n      };\r\n\r\n    case ACTION.USER_REGISTRATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        registration: {\r\n          message: action.payload,\r\n          success: false,\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_REGISTRATION_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        registration: {\r\n          ...state.registration,\r\n          message: \"\",\r\n        },\r\n      };\r\n\r\n    case ACTION.SET_USER_ROLE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userRole: action.payload,\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_ROLE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userRole: [],\r\n      };\r\n\r\n    case ACTION.FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: {\r\n          message: \"\",\r\n          data: action.payload,\r\n        },\r\n      };\r\n\r\n    case ACTION.FETCH_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: {\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_USERS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        users: {\r\n          message: \"\",\r\n          data: {},\r\n        },\r\n      };\r\n\r\n    case ACTION.FETCH_USERS_BY_PAGGINATION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        usersByPagging: {\r\n          data: action.payload,\r\n        },\r\n      };\r\n\r\n    case ACTION.REMOVE_USERS_BY_PAGGINATION:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: \"\",\r\n        usersByPagging: {\r\n          data: {},\r\n        },\r\n      };\r\n\r\n    case ACTION.FETCH_USER_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          data: action.payload,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.FETCH_USER_DETAILS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          data: {},\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_DETAILS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          data: {},\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.REMOVE_USER_DETAILS_POPUP:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          data: { ...state.userDetails.data, isDeleted: true },\r\n          message: \"\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.DELETE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: \"User Updated Successfully!\",\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    case ACTION.UPDATE_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userDetails: {\r\n          ...state.userDetails,\r\n          message: action.payload,\r\n        },\r\n        error: \"\",\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import EventEmitter from \"eventemitter3\";\r\nconst eventEmitter = new EventEmitter();\r\nconst Emitter = {\r\n  on: (event, fn) => eventEmitter.on(event, fn),\r\n  once: (event, fn) => eventEmitter.once(event, fn),\r\n  off: (event, fn) => eventEmitter.off(event, fn),\r\n  emit: (event, payload) => eventEmitter.emit(event, payload),\r\n};\r\nObject.freeze(Emitter);\r\nexport default Emitter;","export default {\r\n  MESSAGE_EVENT_NAME: \"message\",\r\n  AUTHENTICATION_EVENT_NAME: \"authentication\",\r\n  JOIN_ROOM_EVENT_NAME: \"join-room\",\r\n  CONNECT_EVENT_NAME: \"connect\",\r\n  ROOM_NAME: \"controlroom\",\r\n  INCOMING_NOTIFICATION_EVENT_NAME: \"incoming-event\",\r\n  DISCONNECT_EVENT_NAME: \"disconnect\",\r\n  NOTIFICATION_SERVER_URL: \"http://192.168.1.166:4000\",\r\n};\r\n","import Emitter from \"./emitter\";\r\nimport clientIo from \"socket.io-client\";\r\nimport SOCKET_CONSTANTS from \"../../constants/event.constant\";\r\n\r\nclass Socket {\r\n  constructor() {\r\n    this.socket = undefined;\r\n  }\r\n  connect() {\r\n    if (!this.socket) {\r\n      this.socket = clientIo.connect(SOCKET_CONSTANTS.NOTIFICATION_SERVER_URL, {\r\n        reconnect: true,\r\n        forceNew: true,\r\n        autoConnect: true,\r\n        transports: [\"polling\"],\r\n      });\r\n    }\r\n  }\r\n  async initiateSocket() {\r\n    this.connect();\r\n    this.addListeners();\r\n  }\r\n\r\n  removeListener() {\r\n    if (this.socket) {\r\n      this.socket.off(SOCKET_CONSTANTS.MESSAGE_EVENT_NAME, ({ content }) => {\r\n        console.log(\"removing listeners\");\r\n        Emitter.emit(SOCKET_CONSTANTS.INCOMING_NOTIFICATION_EVENT_NAME, {\r\n          content,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  addListeners() {\r\n    if (this.socket) {\r\n      this.socket.on(SOCKET_CONSTANTS.CONNECT_EVENT_NAME, () => {\r\n        if (this.socket.connected) {\r\n          this.socket.emit(SOCKET_CONSTANTS.AUTHENTICATION_EVENT_NAME, {\r\n            token: localStorage.getItem(\"token\"),\r\n            roomId: SOCKET_CONSTANTS.ROOM_NAME,\r\n            userId: \"userId\",\r\n          });\r\n          this.socket.emit(SOCKET_CONSTANTS.JOIN_ROOM_EVENT_NAME, {\r\n            token: localStorage.getItem(\"token\"),\r\n            roomId: SOCKET_CONSTANTS.ROOM_NAME,\r\n            userId: \"userId\",\r\n          });\r\n          console.log(\"socket connected !!\");\r\n        }\r\n      });\r\n      this.socket.on(SOCKET_CONSTANTS.MESSAGE_EVENT_NAME, (data) => {\r\n        console.log(\"socket notification recieved !!\");\r\n        Emitter.emit(SOCKET_CONSTANTS.INCOMING_NOTIFICATION_EVENT_NAME, data);\r\n      });\r\n      this.socket.on(SOCKET_CONSTANTS.DISCONNECT_EVENT_NAME, () => {\r\n        console.log(\"socket disconnected\");\r\n      });\r\n    }\r\n  }\r\n  disconnect() {\r\n    if (this.socket) {\r\n      this.socket.disconnect();\r\n      this.socket = undefined;\r\n    }\r\n  }\r\n  getSocket() {\r\n    return this.socket;\r\n  }\r\n}\r\n\r\nconst socket = new Socket();\r\n\r\nexport default socket;\r\n","import { combineReducers } from \"redux\";\r\nimport AgentReducer from \"./agents\";\r\nimport ProcessReducer from \"./process\";\r\nimport BotReducer from \"./bots\";\r\nimport SocketReducer from \"./socket\";\r\nimport LoginReducer from \"./login\";\r\nimport UserReducer from \"./user\";\r\nimport { loginActionTypes } from \"../actionTypes\";\r\nimport { socket } from \"../../utils/service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst appReducer = combineReducers({\r\n  agents: AgentReducer,\r\n  bots: BotReducer,\r\n  socket: SocketReducer,\r\n  login: LoginReducer,\r\n  user: UserReducer,\r\n  process: ProcessReducer,\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === loginActionTypes.LOGOUT) {\r\n    localStorage.clear();\r\n    socket.disconnect();\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'antd/dist/antd.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const LoginConstant = {\r\n    tokenKey:'auth-token'\r\n}","import { useEffect, useState } from \"react\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  ClockCircleOutlined,\r\n  CloseCircleOutlined,\r\n  SyncOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Tag, notification } from \"antd\";\r\nimport { userRoles } from \"../../constants/app.constants\";\r\n\r\nexport const pushToLink = (history, link, state = {}) => {\r\n  history.push({ pathname: link, state });\r\n};\r\n\r\nexport const getWindowDimension = () => {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return { width, height };\r\n};\r\n\r\nexport const useDimensions = () => {\r\n  const [dimensions, setDimensions] = useState(getWindowDimension());\r\n\r\n  useEffect(() => {\r\n    const handleDimensionChange = () => setDimensions(getWindowDimension());\r\n\r\n    window.addEventListener(\"resize\", handleDimensionChange);\r\n    return () => window.removeEventListener(\"resize\", handleDimensionChange);\r\n  });\r\n  return dimensions;\r\n};\r\n\r\nexport const getStatus = (status) => {\r\n  switch (status) {\r\n    case 0:\r\n      return (\r\n        <Tag icon={<ClockCircleOutlined />} color=\"warning\">\r\n          Pending\r\n        </Tag>\r\n      );\r\n    case 1:\r\n      return (\r\n        <Tag icon={<SyncOutlined spin />} color=\"processing\">\r\n          Running\r\n        </Tag>\r\n      );\r\n    case 2:\r\n      return (\r\n        <Tag icon={<CheckCircleOutlined />} color=\"success\">\r\n          Executed\r\n        </Tag>\r\n      );\r\n    case 3:\r\n      return (\r\n        <Tag icon={<CloseCircleOutlined />} color=\"error\">\r\n          Error\r\n        </Tag>\r\n      );\r\n  }\r\n};\r\n\r\nexport const openNotification = (message = \"\", description = \"\") => {\r\n  notification.open({\r\n    message,\r\n    description,\r\n    type: \"info\",\r\n    style: { width: \"300px\", fontSize: \"12px\" },\r\n  });\r\n};\r\n\r\nexport const isAdmin = () => {\r\n  return getUserRole() === \"Admin\";\r\n};\r\n\r\nexport const getUserRole = () => {\r\n  if (localStorage.getItem(\"user\")) {\r\n    return userRoles[JSON.parse(localStorage.getItem(\"user\")).roleId];\r\n  }\r\n};\r\n\r\nexport const resObject = (type, operation, message, data) => {\r\n  return {\r\n    content: {\r\n      type,\r\n      operation,\r\n      message,\r\n      data,\r\n    },\r\n  };\r\n};\r\n"],"sourceRoot":""}